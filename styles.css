/* ============================================= CSS Reset ================================================== 

Add come CSS normalize/reset mainly taken from Josh Comeau --> https://www.joshwcomeau.com/css/custom-css-reset

/*

/*
    1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
    box-sizing: border-box;
}
  
/*
    2. Remove default margin
*/
* {
    margin: 0;
}
  
/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
*/
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    min-height: 100vh;
    min-width: 100vw;
    display: flex;
    background-color: aqua;
    position: relative;
}
  
/*
    5. Improve media defaults
*/
img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
    max-inline-size: 100%;
}
  
/*
    6. Remove built-in form typography styles
*/
input, button, textarea, select {
    font: inherit;
    font-size: 100%;
}
  
/*
    7. Avoid text overflows and inherit font size
*/
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
    font-size: inherit;
    font-weight: inherit;
}

/*
    8. Create a root stacking context
*/
#root, #__next {
    isolation: isolate;
}

ol[role="list"], ul[role="list"] {
    list-style: none;
    padding-inline: 0;
}

/* ========================================= My Styles ========================================= */

.hero {
    background-image: url('art/lorenzo-herrera-p0j-mE6mGo4-unsplash.jpg');
    background-size: cover; /* Ensures the image covers the full container */
    background-position: center;
    min-height: 100vh;
    flex: 2;
}

.main {
    width: clamp(300px, 40%, 600px); /* Dynamically adjusts width between 300px and 600px */
    min-height: 100vh;
    background-color: rgb(255, 255, 255);
    position: relative;
}

.main-content {
    display: flex;
    width: 100%;
    min-height: 95vh;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    gap: 1rem;
    padding: 2rem;
    padding-bottom: 4rem;
    flex: 1;
}

.main-heading {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    text-align: justify;
}

.sub-heading {
    width: 100%;
}

.signup-form {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    /* flex-wrap: wrap; */
    gap: 1rem;
}

.form-row {
    display: flex;
    justify-content: flex-start;
    flex-direction: column;
    flex-wrap: row wrap;
    flex: 1;
    position: relative;
}

.form-submit {
    display: block;
    width: 100%;
    clear: both;
    text-align: center;
    margin-top: 2rem;
}

.submit-btn {
    /* outline: none; */
}

.footer-links {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    position: absolute;
    bottom: 0;
    min-height: 6vh;
    width: 100%;
    gap: 0.7rem;
}

.footer-icon {
    width: 1.7rem;
}

form > p {
    display: block;
    width: 100%;
    clear: both;
    color: red;
    margin-bottom: -0.5rem;
}

/* Input fields base styles */
input {
    padding: 0.3rem 0.7rem;
    border: 2px solid rgb(159, 159, 159);  /* Base border */
    border-radius: 12px;
    transition: border-color 0.5s ease, box-shadow 0.3s ease;
}

input:required {
    border: 2px solid rgb(77, 77, 77);
}

.label-req:has(+ input) > span::before{
    content: "*";
    font-weight: bold;
    font-style: italic;
    margin-left: 0.3rem;
    color: red;
}

/* Focused input - blue border */
input:focus {
    border-color: blue;
    outline: none;
    box-shadow: 0 0 5px rgba(0, 0, 255, 0.5);
}

/* Green for valid input */
input:not(:placeholder-shown):valid {
    border-color: green;
    box-shadow: 0 0 5px rgba(13, 144, 3, 0.5);
}

.label-req:has(+ input:not(:placeholder-shown):valid) > span::after{
    content: "";
    display: none;
}

/* Red for invalid input */
input:not(:placeholder-shown):invalid {
    border-color: red;
    box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
}

/* Invalid state: show the feedback message for both password and confirm password */
input:not(:placeholder-shown):invalid + .password-message::before {
    content: "Missing a number, uppercase or special character!";
}

.password-confirm-message, .password-message, .tel-message {
    position: absolute;
    top: 100%;  /* This positions the message directly below the input field */
    left: 0;
    color: red;
    font-size: 0.8rem;
}

/* remove the image entirely if the screen is too narrow */
@media (max-width: 500px) {
    .main {
        width: 100%; /* At very small screen sizes, the form takes full width */
    }

    .hero {
        display: none; /* Hide the image on small screens */
    }
}